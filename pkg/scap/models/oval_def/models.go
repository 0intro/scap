// Code generated by https://github.com/gocomply/xsd2go; DO NOT EDIT.
// Models for http://oval.mitre.org/XMLSchema/oval-definitions-5
package oval_def

import (
	"encoding/xml"

	"github.com/gocomply/scap/pkg/scap/models/oval"

	"github.com/gocomply/scap/pkg/scap/models/xml_dsig"
)

// Element
type OvalDefinitions struct {
	XMLName xml.Name `xml:oval_definitions`

	Generator oval.GeneratorType `xml:"generator"`

	Definitions *DefinitionsType `xml:"definitions"`

	Tests *TestsType `xml:"tests"`

	Objects *ObjectsType `xml:"objects"`

	States *StatesType `xml:"states"`

	Variables *VariablesType `xml:"variables"`

	Signature *xml_dsig.Signature `xml:"Signature"`
}

// Element
type Notes struct {
	XMLName xml.Name `xml:notes`
}

// Element
type Definition struct {
	XMLName xml.Name `xml:definition`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Metadata MetadataType `xml:"metadata"`

	Notes *oval.Notes `xml:"notes"`

	Criteria *CriteriaType `xml:"criteria"`
}

// Element
type Test struct {
	XMLName xml.Name `xml:test`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`
}

// Element
type Object struct {
	XMLName xml.Name `xml:object`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`
}

// Element
type Set struct {
	XMLName xml.Name `xml:set`

	SetOperator string `xml:"set_operator,attr"`
}

// Element
type Filter struct {
	XMLName xml.Name `xml:filter`

	Action string `xml:"action,attr"`
}

// Element
type State struct {
	XMLName xml.Name `xml:state`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`
}

// Element
type Variable struct {
	XMLName xml.Name `xml:variable`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`
}

// Element
type ExternalVariable struct {
	XMLName xml.Name `xml:external_variable`
}

// Element
type ConstantVariable struct {
	XMLName xml.Name `xml:constant_variable`
}

// Element
type LocalVariable struct {
	XMLName xml.Name `xml:local_variable`
}

// XSD ComplexType declarations

type DefinitionsType struct {
	Definition []Definition `xml:"definition"`
}

type DefinitionType struct {
	Signature *xml_dsig.Signature `xml:"Signature"`

	Metadata MetadataType `xml:"metadata"`

	Notes *oval.Notes `xml:"notes"`

	Criteria *CriteriaType `xml:"criteria"`
}

type MetadataType struct {
	Title string `xml:"title"`

	Affected []AffectedType `xml:"affected"`

	Reference []ReferenceType `xml:"reference"`

	Description string `xml:"description"`
}

type AffectedType struct {
	Platform []string `xml:"platform"`

	Product []string `xml:"product"`
}

type ReferenceType struct {
}

type CriteriaType struct {
}

type CriterionType struct {
}

type ExtendDefinitionType struct {
}

type TestsType struct {
	Test []Test `xml:"test"`
}

type TestType struct {
	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`
}

type ObjectRefType struct {
}

type StateRefType struct {
}

type ObjectsType struct {
	Object []Object `xml:"object"`
}

type ObjectType struct {
	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`
}

type StatesType struct {
	State []State `xml:"state"`
}

type StateType struct {
	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`
}

type VariablesType struct {
	Variable []Variable `xml:"variable"`
}

type VariableType struct {
	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`
}

type PossibleValueType struct {
}

type PossibleRestrictionType struct {
}

type RestrictionType struct {
}

type ValueType struct {
}

type LiteralComponentType struct {
}

type ObjectComponentType struct {
}

type VariableComponentType struct {
}

type ArithmeticFunctionType struct {
}

type BeginFunctionType struct {
}

type ConcatFunctionType struct {
}

type EndFunctionType struct {
}

type EscapeRegexFunctionType struct {
}

type SplitFunctionType struct {
}

type SubstringFunctionType struct {
}

type TimeDifferenceFunctionType struct {
}

type RegexCaptureFunctionType struct {
}

type UniqueFunctionType struct {
}

type CountFunctionType struct {
}

type GlobToRegexFunctionType struct {
}

type EntitySimpleBaseType struct {
}

type EntityComplexBaseType struct {
}

type EntityObjectIPAddressType struct {
}

type EntityObjectIPAddressStringType struct {
}

type EntityObjectAnySimpleType struct {
}

type EntityObjectBinaryType struct {
}

type EntityObjectBoolType struct {
}

type EntityObjectFloatType struct {
}

type EntityObjectIntType struct {
}

type EntityObjectStringType struct {
}

type EntityObjectVersionType struct {
}

type EntityObjectRecordType struct {
}

type EntityObjectFieldType struct {
}

type EntityStateSimpleBaseType struct {
}

type EntityStateComplexBaseType struct {
}

type EntityStateIPAddressType struct {
}

type EntityStateIPAddressStringType struct {
}

type EntityStateAnySimpleType struct {
}

type EntityStateBinaryType struct {
}

type EntityStateBoolType struct {
}

type EntityStateFloatType struct {
}

type EntityStateIntType struct {
}

type EntityStateEVRStringType struct {
}

type EntityStateDebianEVRStringType struct {
}

type EntityStateVersionType struct {
}

type EntityStateFileSetRevisionType struct {
}

type EntityStateIOSVersionType struct {
}

type EntityStateStringType struct {
}

type EntityStateRecordType struct {
}

type EntityStateFieldType struct {
}

// Code generated by https://github.com/gocomply/xsd2go; DO NOT EDIT.
// Models for http://scap.nist.gov/schema/scap/source/1.2
package ds

import (
	"encoding/xml"
	"github.com/0intro/scap/pkg/scap/models/cdf"
	"github.com/0intro/scap/pkg/scap/models/cpe_dict"
	"github.com/0intro/scap/pkg/scap/models/er"
	"github.com/0intro/scap/pkg/scap/models/inter"
	"github.com/0intro/scap/pkg/scap/models/oval_def"
	"github.com/0intro/scap/pkg/scap/models/xml_dsig"
)

// Element
type DataStreamCollection struct {
	XMLName xml.Name `xml:"data-stream-collection"`

	Id string `xml:"id,attr"`

	SchematronVersion string `xml:"schematron-version,attr"`

	DataStream []DataStream `xml:"data-stream"`

	Component []Component `xml:"component"`

	ExtendedComponent []ExtendedComponent `xml:"extended-component"`

	Signature []xml_dsig.SignatureType `xml:"Signature"`
}

// Element
type DataStream struct {
	XMLName xml.Name `xml:"data-stream"`

	Id string `xml:"id,attr"`

	UseCase string `xml:"use-case,attr"`

	ScapVersion string `xml:"scap-version,attr"`

	Timestamp string `xml:"timestamp,attr"`

	Dictionaries *RefListType `xml:"dictionaries"`

	Checklists *RefListType `xml:"checklists"`

	Checks RefListType `xml:"checks"`

	ExtendedComponents *RefListType `xml:"extended-components"`
}

// Element
type Component struct {
	XMLName xml.Name `xml:"component"`

	Id string `xml:"id,attr"`

	Timestamp string `xml:"timestamp,attr"`

	Benchmark *cdf.Benchmark `xml:"Benchmark"`

	OvalDefinitions *oval_def.OvalDefinitions `xml:"oval_definitions"`

	Ocil *inter.OCILType `xml:"ocil"`

	CpeList *cpe_dict.ListType `xml:"cpe-list"`

	Tailoring *cdf.TailoringType `xml:"Tailoring"`
}

// Element
type ExtendedComponent struct {
	XMLName xml.Name `xml:"extended-component"`

	Id string `xml:"id,attr"`

	Timestamp string `xml:"timestamp,attr"`
}

// Element
type ComponentRef struct {
	XMLName xml.Name `xml:"component-ref"`

	Id string `xml:"id,attr"`

	XlinkType string `xml:"type,attr"`

	XlinkHref string `xml:"href,attr"`

	Catalog *er.Catalog `xml:",any"`
}

// XSD ComplexType declarations

type ContentSourceType struct {
	XMLName xml.Name

	Href string `xml:"href,attr"`

	InnerXml string `xml:",innerxml"`
}

type RefListType struct {
	XMLName xml.Name

	ComponentRef []ComponentRef `xml:",any"`

	InnerXml string `xml:",innerxml"`
}

// XSD SimpleType declarations

type UseCaseType string

const UseCaseTypeConfiguration UseCaseType = "CONFIGURATION"

const UseCaseTypeVulnerability UseCaseType = "VULNERABILITY"

const UseCaseTypeInventory UseCaseType = "INVENTORY"

const UseCaseTypeOther UseCaseType = "OTHER"

type ScapVersionType string

const ScapVersionType10 ScapVersionType = "1.0"

const ScapVersionType11 ScapVersionType = "1.1"

const ScapVersionType12 ScapVersionType = "1.2"

const ScapVersionType13 ScapVersionType = "1.3"

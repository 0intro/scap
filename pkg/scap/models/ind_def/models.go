// Code generated by https://github.com/gocomply/xsd2go; DO NOT EDIT.
// Models for http://oval.mitre.org/XMLSchema/oval-definitions-5#independent
package ind_def

import (
	"encoding/xml"

	"github.com/gocomply/scap/pkg/scap/models/oval"

	"github.com/gocomply/scap/pkg/scap/models/oval_def"

	"github.com/gocomply/scap/pkg/scap/models/xml_dsig"
)

// Element
type FamilyTest struct {
	XMLName xml.Name `xml:family_test`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Object oval_def.ObjectRefType `xml:"object"`

	State []oval_def.StateRefType `xml:"state"`
}

// Element
type FamilyObject struct {
	XMLName xml.Name `xml:family_object`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`
}

// Element
type FamilyState struct {
	XMLName xml.Name `xml:family_state`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Family *EntityStateFamilyType `xml:"family"`
}

// Element
type FilehashTest struct {
	XMLName xml.Name `xml:filehash_test`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Object oval_def.ObjectRefType `xml:"object"`

	State []oval_def.StateRefType `xml:"state"`
}

// Element
type FilehashObject struct {
	XMLName xml.Name `xml:filehash_object`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Set oval_def.Set `xml:"set"`
}

// Element
type FilehashState struct {
	XMLName xml.Name `xml:filehash_state`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Filepath *oval_def.EntityStateStringType `xml:"filepath"`

	Path *oval_def.EntityStateStringType `xml:"path"`

	Filename *oval_def.EntityStateStringType `xml:"filename"`

	Md5 *oval_def.EntityStateStringType `xml:"md5"`

	Sha1 *oval_def.EntityStateStringType `xml:"sha1"`

	WindowsView *EntityStateWindowsViewType `xml:"windows_view"`
}

// Element
type Filehash58Test struct {
	XMLName xml.Name `xml:filehash58_test`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Object oval_def.ObjectRefType `xml:"object"`

	State []oval_def.StateRefType `xml:"state"`
}

// Element
type Filehash58Object struct {
	XMLName xml.Name `xml:filehash58_object`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Set oval_def.Set `xml:"set"`
}

// Element
type Filehash58State struct {
	XMLName xml.Name `xml:filehash58_state`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Filepath *oval_def.EntityStateStringType `xml:"filepath"`

	Path *oval_def.EntityStateStringType `xml:"path"`

	Filename *oval_def.EntityStateStringType `xml:"filename"`

	HashType *EntityStateHashTypeType `xml:"hash_type"`

	Hash *oval_def.EntityStateStringType `xml:"hash"`

	WindowsView *EntityStateWindowsViewType `xml:"windows_view"`
}

// Element
type EnvironmentvariableTest struct {
	XMLName xml.Name `xml:environmentvariable_test`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Object oval_def.ObjectRefType `xml:"object"`

	State []oval_def.StateRefType `xml:"state"`
}

// Element
type EnvironmentvariableObject struct {
	XMLName xml.Name `xml:environmentvariable_object`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Set oval_def.Set `xml:"set"`

	Name oval_def.EntityObjectStringType `xml:"name"`
}

// Element
type EnvironmentvariableState struct {
	XMLName xml.Name `xml:environmentvariable_state`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Name *oval_def.EntityStateStringType `xml:"name"`

	Value *oval_def.EntityStateAnySimpleType `xml:"value"`
}

// Element
type Environmentvariable58Test struct {
	XMLName xml.Name `xml:environmentvariable58_test`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Object oval_def.ObjectRefType `xml:"object"`

	State []oval_def.StateRefType `xml:"state"`
}

// Element
type Environmentvariable58Object struct {
	XMLName xml.Name `xml:environmentvariable58_object`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Set oval_def.Set `xml:"set"`
}

// Element
type Environmentvariable58State struct {
	XMLName xml.Name `xml:environmentvariable58_state`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Pid *oval_def.EntityStateIntType `xml:"pid"`

	Name *oval_def.EntityStateStringType `xml:"name"`

	Value *oval_def.EntityStateAnySimpleType `xml:"value"`
}

// Element
type LdapTest struct {
	XMLName xml.Name `xml:ldap_test`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Object oval_def.ObjectRefType `xml:"object"`

	State []oval_def.StateRefType `xml:"state"`
}

// Element
type LdapObject struct {
	XMLName xml.Name `xml:ldap_object`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Set oval_def.Set `xml:"set"`
}

// Element
type LdapState struct {
	XMLName xml.Name `xml:ldap_state`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Suffix *oval_def.EntityStateStringType `xml:"suffix"`

	RelativeDn *oval_def.EntityStateStringType `xml:"relative_dn"`

	Attribute *oval_def.EntityStateStringType `xml:"attribute"`

	ObjectClass *oval_def.EntityStateStringType `xml:"object_class"`

	Ldaptype *EntityStateLdaptypeType `xml:"ldaptype"`

	Value *oval_def.EntityStateAnySimpleType `xml:"value"`
}

// Element
type Ldap57Test struct {
	XMLName xml.Name `xml:ldap57_test`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Object oval_def.ObjectRefType `xml:"object"`

	State []oval_def.StateRefType `xml:"state"`
}

// Element
type Ldap57Object struct {
	XMLName xml.Name `xml:ldap57_object`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Set oval_def.Set `xml:"set"`
}

// Element
type Ldap57State struct {
	XMLName xml.Name `xml:ldap57_state`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Suffix *oval_def.EntityStateStringType `xml:"suffix"`

	RelativeDn *oval_def.EntityStateStringType `xml:"relative_dn"`

	Attribute *oval_def.EntityStateStringType `xml:"attribute"`

	ObjectClass *oval_def.EntityStateStringType `xml:"object_class"`

	Ldaptype *EntityStateLdaptypeType `xml:"ldaptype"`

	Value *oval_def.EntityStateRecordType `xml:"value"`
}

// Element
type SqlTest struct {
	XMLName xml.Name `xml:sql_test`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Object oval_def.ObjectRefType `xml:"object"`

	State []oval_def.StateRefType `xml:"state"`
}

// Element
type SqlObject struct {
	XMLName xml.Name `xml:sql_object`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Set oval_def.Set `xml:"set"`
}

// Element
type SqlState struct {
	XMLName xml.Name `xml:sql_state`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Engine *EntityStateEngineType `xml:"engine"`

	Version *oval_def.EntityStateStringType `xml:"version"`

	ConnectionString *oval_def.EntityStateStringType `xml:"connection_string"`

	Sql *oval_def.EntityStateStringType `xml:"sql"`

	Result *oval_def.EntityStateAnySimpleType `xml:"result"`
}

// Element
type Sql57Test struct {
	XMLName xml.Name `xml:sql57_test`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Object oval_def.ObjectRefType `xml:"object"`

	State []oval_def.StateRefType `xml:"state"`
}

// Element
type Sql57Object struct {
	XMLName xml.Name `xml:sql57_object`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Set oval_def.Set `xml:"set"`
}

// Element
type Sql57State struct {
	XMLName xml.Name `xml:sql57_state`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Engine *EntityStateEngineType `xml:"engine"`

	Version *oval_def.EntityStateStringType `xml:"version"`

	ConnectionString *oval_def.EntityStateStringType `xml:"connection_string"`

	Sql *oval_def.EntityStateStringType `xml:"sql"`

	Result *oval_def.EntityStateRecordType `xml:"result"`
}

// Element
type Textfilecontent54Test struct {
	XMLName xml.Name `xml:textfilecontent54_test`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Object oval_def.ObjectRefType `xml:"object"`

	State []oval_def.StateRefType `xml:"state"`
}

// Element
type Textfilecontent54Object struct {
	XMLName xml.Name `xml:textfilecontent54_object`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Set oval_def.Set `xml:"set"`
}

// Element
type Textfilecontent54State struct {
	XMLName xml.Name `xml:textfilecontent54_state`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Filepath *oval_def.EntityStateStringType `xml:"filepath"`

	Path *oval_def.EntityStateStringType `xml:"path"`

	Filename *oval_def.EntityStateStringType `xml:"filename"`

	Pattern *oval_def.EntityStateStringType `xml:"pattern"`

	Instance *oval_def.EntityStateIntType `xml:"instance"`

	Text *oval_def.EntityStateAnySimpleType `xml:"text"`

	Subexpression *oval_def.EntityStateAnySimpleType `xml:"subexpression"`

	WindowsView *EntityStateWindowsViewType `xml:"windows_view"`
}

// Element
type TextfilecontentTest struct {
	XMLName xml.Name `xml:textfilecontent_test`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Object oval_def.ObjectRefType `xml:"object"`

	State []oval_def.StateRefType `xml:"state"`
}

// Element
type TextfilecontentObject struct {
	XMLName xml.Name `xml:textfilecontent_object`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Set oval_def.Set `xml:"set"`
}

// Element
type TextfilecontentState struct {
	XMLName xml.Name `xml:textfilecontent_state`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Path *oval_def.EntityStateStringType `xml:"path"`

	Filename *oval_def.EntityStateStringType `xml:"filename"`

	Line *oval_def.EntityStateStringType `xml:"line"`

	Subexpression *oval_def.EntityStateAnySimpleType `xml:"subexpression"`

	WindowsView *EntityStateWindowsViewType `xml:"windows_view"`
}

// Element
type UnknownTest struct {
	XMLName xml.Name `xml:unknown_test`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`
}

// Element
type VariableTest struct {
	XMLName xml.Name `xml:variable_test`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Object oval_def.ObjectRefType `xml:"object"`

	State []oval_def.StateRefType `xml:"state"`
}

// Element
type VariableObject struct {
	XMLName xml.Name `xml:variable_object`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Set oval_def.Set `xml:"set"`
}

// Element
type VariableState struct {
	XMLName xml.Name `xml:variable_state`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	VarRef *EntityStateVariableRefType `xml:"var_ref"`

	Value *oval_def.EntityStateAnySimpleType `xml:"value"`
}

// Element
type XmlfilecontentTest struct {
	XMLName xml.Name `xml:xmlfilecontent_test`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Object oval_def.ObjectRefType `xml:"object"`

	State []oval_def.StateRefType `xml:"state"`
}

// Element
type XmlfilecontentObject struct {
	XMLName xml.Name `xml:xmlfilecontent_object`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Set oval_def.Set `xml:"set"`
}

// Element
type XmlfilecontentState struct {
	XMLName xml.Name `xml:xmlfilecontent_state`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Filepath *oval_def.EntityStateStringType `xml:"filepath"`

	Path *oval_def.EntityStateStringType `xml:"path"`

	Filename *oval_def.EntityStateStringType `xml:"filename"`

	Xpath *oval_def.EntityStateStringType `xml:"xpath"`

	ValueOf *oval_def.EntityStateAnySimpleType `xml:"value_of"`

	WindowsView *EntityStateWindowsViewType `xml:"windows_view"`
}

// Element
type YamlfilecontentTest struct {
	XMLName xml.Name `xml:yamlfilecontent_test`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Object oval_def.ObjectRefType `xml:"object"`

	State []oval_def.StateRefType `xml:"state"`
}

// Element
type YamlfilecontentObject struct {
	XMLName xml.Name `xml:yamlfilecontent_object`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Set oval_def.Set `xml:"set"`
}

// Element
type YamlfilecontentState struct {
	XMLName xml.Name `xml:yamlfilecontent_state`

	Signature *xml_dsig.Signature `xml:"Signature"`

	Notes *oval.Notes `xml:"notes"`

	Filepath *oval_def.EntityStateStringType `xml:"filepath"`

	Path *oval_def.EntityStateStringType `xml:"path"`

	Filename *oval_def.EntityStateStringType `xml:"filename"`

	Yamlpath *oval_def.EntityStateStringType `xml:"yamlpath"`

	ValueOf *oval_def.EntityStateAnySimpleType `xml:"value_of"`

	WindowsView *EntityStateWindowsViewType `xml:"windows_view"`
}

// XSD ComplexType declarations

type LdapBehaviors struct {
	Scope string `xml:"scope,attr"`
}

type Textfilecontent54Behaviors struct {
	IgnoreCase string `xml:"ignore_case,attr"`

	Multiline string `xml:"multiline,attr"`

	Singleline string `xml:"singleline,attr"`
}

type FileBehaviors struct {
	MaxDepth string `xml:"max_depth,attr"`

	Recurse string `xml:"recurse,attr"`

	RecurseDirection string `xml:"recurse_direction,attr"`

	RecurseFileSystem string `xml:"recurse_file_system,attr"`

	WindowsView string `xml:"windows_view,attr"`
}

type EntityObjectEngineType struct {
}

type EntityStateEngineType struct {
}

type EntityStateFamilyType struct {
}

type EntityObjectHashTypeType struct {
}

type EntityStateHashTypeType struct {
}

type EntityObjectVariableRefType struct {
}

type EntityStateVariableRefType struct {
}

type EntityStateLdaptypeType struct {
}

type EntityStateWindowsViewType struct {
}
